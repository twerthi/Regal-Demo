name: Build Lambda container

on:
  workflow_dispatch:


jobs:
  build:

    runs-on: ubuntu-latest

    env:
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY  }}
        OCTOPUS_URL: "https://demo.octopus.app"
        OCTOPUS_SPACE: 'Shawn Sesna'

    steps:
    - uses: actions/checkout@v2
    - name: Set Version
      run: echo "PACKAGE_VERSION=$(date +'%Y.%m.%d').$GITHUB_RUN_NUMBER" >> $GITHUB_ENV

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: "us-east-1"
        aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.TEST_AWS_SECRET_KEY }}

    - name: Login to Amazon Test ECR
      id: login-ecr-test
      uses: aws-actions/amazon-ecr-login@v2
      
    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr-test.outputs.registry }}
        REPOSITORY: lambda-docker-hello-world
        IMAGE_TAG: ${{ env.PACKAGE_VERSION }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG lambda/.
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
      

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: "us-east-2"
        aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_KEY }}

    - name: Login to Amazon Prod ECR
      id: login-ecr-prod
      uses: aws-actions/amazon-ecr-login@v2         

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr-prod.outputs.registry }}
        REPOSITORY: lambda-docker-hello-world
        IMAGE_TAG: ${{ env.PACKAGE_VERSION }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG lambda/.
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

    - name: Create a release in Octopus Deploy üêô
      uses: OctopusDeploy/create-release-action@v3
      with:
        project: 'AWS Container Lambda'
        packages: |
          "AWS - Deploy Lambda Function image:${{ env.PACKAGE_VERSION }}"      